<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
  <!ENTITY version "4.6.3">
]>
<refentry id="MetaScreen">
<refmeta>
<refentrytitle role="top_of_page" id="MetaScreen.top_of_page">MetaScreen</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>MUFFIN Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>MetaScreen</refname>
<refpurpose>Muffin X screen handler</refpurpose>
</refnamediv>

<refsect1 id="MetaScreen.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_proto_type" colwidth="150px"/>
<colspec colname="functions_proto_name"/>
<tbody>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-get-screen-number">meta_screen_get_screen_number</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="MetaDisplay"><returnvalue>MetaDisplay</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="meta-screen-get-display">meta_screen_get_display</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="Window"><returnvalue>Window</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-get-xroot">meta_screen_get_xroot</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-get-size">meta_screen_get_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="MetaScreen"><returnvalue>MetaScreen</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="meta-screen-for-x-screen">meta_screen_for_x_screen</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-set-cm-selection">meta_screen_set_cm_selection</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-unset-cm-selection">meta_screen_unset_cm_selection</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GSList"><returnvalue>GSList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="meta-screen-get-startup-sequences">meta_screen_get_startup_sequences</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="meta-screen-get-workspaces">meta_screen_get_workspaces</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-get-n-workspaces">meta_screen_get_n_workspaces</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="MetaWorkspace"><returnvalue>MetaWorkspace</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="meta-screen-get-workspace-by-index">meta_screen_get_workspace_by_index</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-remove-workspace">meta_screen_remove_workspace</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="MetaWorkspace"><returnvalue>MetaWorkspace</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="meta-screen-append-new-workspace">meta_screen_append_new_workspace</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-get-active-workspace-index">meta_screen_get_active_workspace_index</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="MetaWorkspace"><returnvalue>MetaWorkspace</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="meta-screen-get-active-workspace">meta_screen_get_active_workspace</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-show-desktop">meta_screen_show_desktop</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-toggle-desktop">meta_screen_toggle_desktop</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-unshow-desktop">meta_screen_unshow_desktop</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-get-n-monitors">meta_screen_get_n_monitors</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-get-primary-monitor">meta_screen_get_primary_monitor</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-get-current-monitor">meta_screen_get_current_monitor</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-get-monitor-geometry">meta_screen_get_monitor_geometry</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-get-monitor-in-fullscreen">meta_screen_get_monitor_in_fullscreen</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-get-monitor-index-for-rect">meta_screen_get_monitor_index_for_rect</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="MetaWindow"><returnvalue>MetaWindow</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="meta-screen-get-mouse-window">meta_screen_get_mouse_window</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="meta-screen-override-workspace-layout">meta_screen_override_workspace_layout</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="MetaScreen.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="other_proto_type" colwidth="150px"/>
<colspec colname="other_proto_name"/>
<tbody>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="MetaScreenCorner">MetaScreenCorner</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="MetaScreen.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="MetaScreen.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="meta-screen-get-screen-number" role="function">
<title>meta_screen_get_screen_number&#160;()</title>
<indexterm zone="meta-screen-get-screen-number"><primary>meta_screen_get_screen_number</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
meta_screen_get_screen_number (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>);</programlisting>
</refsect2>
<refsect2 id="meta-screen-get-display" role="function">
<title>meta_screen_get_display&#160;()</title>
<indexterm zone="meta-screen-get-display"><primary>meta_screen_get_display</primary></indexterm>
<programlisting language="C"><link linkend="MetaDisplay"><returnvalue>MetaDisplay</returnvalue></link>&#160;*
meta_screen_get_display (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>);</programlisting>
<refsect3 id="meta-screen-get-display.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>screen</para></entry>
<entry role="parameter_description"><para>A <link linkend="MetaScreen"><type>MetaScreen</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="meta-screen-get-display.returns" role="returns">
<title>Returns</title>
<para>Display. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="meta-screen-get-xroot" role="function">
<title>meta_screen_get_xroot&#160;()</title>
<indexterm zone="meta-screen-get-xroot"><primary>meta_screen_get_xroot</primary></indexterm>
<programlisting language="C"><link linkend="Window"><returnvalue>Window</returnvalue></link>
meta_screen_get_xroot (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>);</programlisting>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para></refsect2>
<refsect2 id="meta-screen-get-size" role="function">
<title>meta_screen_get_size&#160;()</title>
<indexterm zone="meta-screen-get-size"><primary>meta_screen_get_size</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
meta_screen_get_size (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>,
                      <parameter><link linkend="int"><type>int</type></link> *width</parameter>,
                      <parameter><link linkend="int"><type>int</type></link> *height</parameter>);</programlisting>
<para>Retrieve the size of the screen.</para>
<refsect3 id="meta-screen-get-size.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>screen</para></entry>
<entry role="parameter_description"><para>A <link linkend="MetaScreen"><type>MetaScreen</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>width</para></entry>
<entry role="parameter_description"><para>The width of the screen. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>height</para></entry>
<entry role="parameter_description"><para>The height of the screen. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="meta-screen-for-x-screen" role="function">
<title>meta_screen_for_x_screen&#160;()</title>
<indexterm zone="meta-screen-for-x-screen"><primary>meta_screen_for_x_screen</primary></indexterm>
<programlisting language="C"><link linkend="MetaScreen"><returnvalue>MetaScreen</returnvalue></link>&#160;*
meta_screen_for_x_screen (<parameter><link linkend="Screen"><type>Screen</type></link> *xscreen</parameter>);</programlisting>
<para>Gets the <link linkend="MetaScreen"><type>MetaScreen</type></link> corresponding to an X screen structure.</para>
<refsect3 id="meta-screen-for-x-screen.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>xscreen</para></entry>
<entry role="parameter_description"><para>an X screen structure.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="meta-screen-for-x-screen.returns" role="returns">
<title>Returns</title>
<para>the <link linkend="MetaScreen"><type>MetaScreen</type></link> for the X screen
<link linkend="NULL:CAPS"><literal>NULL</literal></link> if Metacity is not managing the screen. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="meta-screen-set-cm-selection" role="function">
<title>meta_screen_set_cm_selection&#160;()</title>
<indexterm zone="meta-screen-set-cm-selection"><primary>meta_screen_set_cm_selection</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
meta_screen_set_cm_selection (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>);</programlisting>
</refsect2>
<refsect2 id="meta-screen-unset-cm-selection" role="function">
<title>meta_screen_unset_cm_selection&#160;()</title>
<indexterm zone="meta-screen-unset-cm-selection"><primary>meta_screen_unset_cm_selection</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
meta_screen_unset_cm_selection (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>);</programlisting>
</refsect2>
<refsect2 id="meta-screen-get-startup-sequences" role="function">
<title>meta_screen_get_startup_sequences&#160;()</title>
<indexterm zone="meta-screen-get-startup-sequences"><primary>meta_screen_get_startup_sequences</primary></indexterm>
<programlisting language="C"><link linkend="GSList"><returnvalue>GSList</returnvalue></link>&#160;*
meta_screen_get_startup_sequences (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>);</programlisting>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="meta-screen-get-startup-sequences.returns" role="returns">
<title>Returns</title>
<para>Currently active <link linkend="SnStartupSequence"><type>SnStartupSequence</type></link> items. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="meta-screen-get-workspaces" role="function">
<title>meta_screen_get_workspaces&#160;()</title>
<indexterm zone="meta-screen-get-workspaces"><primary>meta_screen_get_workspaces</primary></indexterm>
<programlisting language="C"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
meta_screen_get_workspaces (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>);</programlisting>

<para><emphasis role="annotation">[<acronym>skip</acronym>]</emphasis></para><refsect3 id="meta-screen-get-workspaces.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>screen</para></entry>
<entry role="parameter_description"><para>a <link linkend="MetaScreen"><type>MetaScreen</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="meta-screen-get-workspaces.returns" role="returns">
<title>Returns</title>
<para>The workspaces for <parameter>screen</parameter>
. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>][<acronym>element-type</acronym> Meta.Workspace]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="meta-screen-get-n-workspaces" role="function">
<title>meta_screen_get_n_workspaces&#160;()</title>
<indexterm zone="meta-screen-get-n-workspaces"><primary>meta_screen_get_n_workspaces</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
meta_screen_get_n_workspaces (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>);</programlisting>
</refsect2>
<refsect2 id="meta-screen-get-workspace-by-index" role="function">
<title>meta_screen_get_workspace_by_index&#160;()</title>
<indexterm zone="meta-screen-get-workspace-by-index"><primary>meta_screen_get_workspace_by_index</primary></indexterm>
<programlisting language="C"><link linkend="MetaWorkspace"><returnvalue>MetaWorkspace</returnvalue></link>&#160;*
meta_screen_get_workspace_by_index (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>,
                                    <parameter><link linkend="int"><type>int</type></link> index</parameter>);</programlisting>
<para>Gets the workspace object for one of a screen's workspaces given the workspace
index. It's valid to call this function with an out-of-range index and it
will robustly return <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para>
<refsect3 id="meta-screen-get-workspace-by-index.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>screen</para></entry>
<entry role="parameter_description"><para>a <link linkend="MetaScreen"><type>MetaScreen</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>index</para></entry>
<entry role="parameter_description"><para>index of one of the screen's workspaces</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="meta-screen-get-workspace-by-index.returns" role="returns">
<title>Returns</title>
<para>the workspace object with specified index, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>
if the index is out of range. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="meta-screen-remove-workspace" role="function">
<title>meta_screen_remove_workspace&#160;()</title>
<indexterm zone="meta-screen-remove-workspace"><primary>meta_screen_remove_workspace</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
meta_screen_remove_workspace (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>,
                              <parameter><link linkend="MetaWorkspace"><type>MetaWorkspace</type></link> *workspace</parameter>,
                              <parameter><link linkend="guint32"><type>guint32</type></link> timestamp</parameter>);</programlisting>
</refsect2>
<refsect2 id="meta-screen-append-new-workspace" role="function">
<title>meta_screen_append_new_workspace&#160;()</title>
<indexterm zone="meta-screen-append-new-workspace"><primary>meta_screen_append_new_workspace</primary></indexterm>
<programlisting language="C"><link linkend="MetaWorkspace"><returnvalue>MetaWorkspace</returnvalue></link>&#160;*
meta_screen_append_new_workspace (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>,
                                  <parameter><link linkend="gboolean"><type>gboolean</type></link> activate</parameter>,
                                  <parameter><link linkend="guint32"><type>guint32</type></link> timestamp</parameter>);</programlisting>
<para>Append a new workspace to the screen and (optionally) switch to that
screen.</para>
<refsect3 id="meta-screen-append-new-workspace.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>screen</para></entry>
<entry role="parameter_description"><para>a <link linkend="MetaScreen"><type>MetaScreen</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>activate</para></entry>
<entry role="parameter_description"><para><link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the workspace should be switched to after creation</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>timestamp</para></entry>
<entry role="parameter_description"><para>if switching to a new workspace, timestamp to be used when
focusing a window on the new workspace. (Doesn't hurt to pass a valid
timestamp when available even if not switching workspaces.)</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="meta-screen-append-new-workspace.returns" role="returns">
<title>Returns</title>
<para>the newly appended workspace. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="meta-screen-get-active-workspace-index" role="function">
<title>meta_screen_get_active_workspace_index&#160;()</title>
<indexterm zone="meta-screen-get-active-workspace-index"><primary>meta_screen_get_active_workspace_index</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
meta_screen_get_active_workspace_index
                               (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>);</programlisting>
</refsect2>
<refsect2 id="meta-screen-get-active-workspace" role="function">
<title>meta_screen_get_active_workspace&#160;()</title>
<indexterm zone="meta-screen-get-active-workspace"><primary>meta_screen_get_active_workspace</primary></indexterm>
<programlisting language="C"><link linkend="MetaWorkspace"><returnvalue>MetaWorkspace</returnvalue></link>&#160;*
meta_screen_get_active_workspace (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>);</programlisting>
<refsect3 id="meta-screen-get-active-workspace.returns" role="returns">
<title>Returns</title>
<para>The current workspace. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="meta-screen-show-desktop" role="function">
<title>meta_screen_show_desktop&#160;()</title>
<indexterm zone="meta-screen-show-desktop"><primary>meta_screen_show_desktop</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
meta_screen_show_desktop (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>,
                          <parameter><link linkend="guint32"><type>guint32</type></link> timestamp</parameter>);</programlisting>
</refsect2>
<refsect2 id="meta-screen-toggle-desktop" role="function">
<title>meta_screen_toggle_desktop&#160;()</title>
<indexterm zone="meta-screen-toggle-desktop"><primary>meta_screen_toggle_desktop</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
meta_screen_toggle_desktop (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>,
                            <parameter><link linkend="guint32"><type>guint32</type></link> timestamp</parameter>);</programlisting>
</refsect2>
<refsect2 id="meta-screen-unshow-desktop" role="function">
<title>meta_screen_unshow_desktop&#160;()</title>
<indexterm zone="meta-screen-unshow-desktop"><primary>meta_screen_unshow_desktop</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
meta_screen_unshow_desktop (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>);</programlisting>
</refsect2>
<refsect2 id="meta-screen-get-n-monitors" role="function">
<title>meta_screen_get_n_monitors&#160;()</title>
<indexterm zone="meta-screen-get-n-monitors"><primary>meta_screen_get_n_monitors</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
meta_screen_get_n_monitors (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>);</programlisting>
<para>Gets the number of monitors that are joined together to form <parameter>screen</parameter>
.</para>
<refsect3 id="meta-screen-get-n-monitors.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>screen</para></entry>
<entry role="parameter_description"><para>a <link linkend="MetaScreen"><type>MetaScreen</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="meta-screen-get-n-monitors.returns" role="returns">
<title>Returns</title>
<para> the number of monitors</para>
</refsect3></refsect2>
<refsect2 id="meta-screen-get-primary-monitor" role="function">
<title>meta_screen_get_primary_monitor&#160;()</title>
<indexterm zone="meta-screen-get-primary-monitor"><primary>meta_screen_get_primary_monitor</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
meta_screen_get_primary_monitor (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>);</programlisting>
<para>Gets the index of the primary monitor on this <parameter>screen</parameter>
.</para>
<refsect3 id="meta-screen-get-primary-monitor.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>screen</para></entry>
<entry role="parameter_description"><para>a <link linkend="MetaScreen"><type>MetaScreen</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="meta-screen-get-primary-monitor.returns" role="returns">
<title>Returns</title>
<para> a monitor index</para>
</refsect3></refsect2>
<refsect2 id="meta-screen-get-current-monitor" role="function">
<title>meta_screen_get_current_monitor&#160;()</title>
<indexterm zone="meta-screen-get-current-monitor"><primary>meta_screen_get_current_monitor</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
meta_screen_get_current_monitor (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>);</programlisting>
<para>Gets the index of the monitor that currently has the mouse pointer.</para>
<refsect3 id="meta-screen-get-current-monitor.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>screen</para></entry>
<entry role="parameter_description"><para>a <link linkend="MetaScreen"><type>MetaScreen</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="meta-screen-get-current-monitor.returns" role="returns">
<title>Returns</title>
<para> a monitor index</para>
</refsect3></refsect2>
<refsect2 id="meta-screen-get-monitor-geometry" role="function">
<title>meta_screen_get_monitor_geometry&#160;()</title>
<indexterm zone="meta-screen-get-monitor-geometry"><primary>meta_screen_get_monitor_geometry</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
meta_screen_get_monitor_geometry (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>,
                                  <parameter><link linkend="int"><type>int</type></link> monitor</parameter>,
                                  <parameter><link linkend="MetaRectangle"><type>MetaRectangle</type></link> *geometry</parameter>);</programlisting>
<para>Stores the location and size of the indicated monitor in <parameter>geometry</parameter>
.</para>
<refsect3 id="meta-screen-get-monitor-geometry.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>screen</para></entry>
<entry role="parameter_description"><para>a <link linkend="MetaScreen"><type>MetaScreen</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>monitor</para></entry>
<entry role="parameter_description"><para>the monitor number</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>geometry</para></entry>
<entry role="parameter_description"><para>location to store the monitor geometry. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="meta-screen-get-monitor-in-fullscreen" role="function">
<title>meta_screen_get_monitor_in_fullscreen&#160;()</title>
<indexterm zone="meta-screen-get-monitor-in-fullscreen"><primary>meta_screen_get_monitor_in_fullscreen</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
meta_screen_get_monitor_in_fullscreen (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>,
                                       <parameter><link linkend="int"><type>int</type></link> monitor</parameter>);</programlisting>
<para>Determines whether there is a fullscreen window obscuring the specified
monitor. If there is a fullscreen window, the desktop environment will
typically hide any controls that might obscure the fullscreen window.</para>
<para>You can get notification when this changes by connecting to
MetaScreen::in-fullscreen-changed.</para>
<refsect3 id="meta-screen-get-monitor-in-fullscreen.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>screen</para></entry>
<entry role="parameter_description"><para>a <link linkend="MetaScreen"><type>MetaScreen</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>monitor</para></entry>
<entry role="parameter_description"><para>the monitor number</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="meta-screen-get-monitor-in-fullscreen.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if there is a fullscreen window covering the specified monitor.</para>
</refsect3></refsect2>
<refsect2 id="meta-screen-get-monitor-index-for-rect" role="function">
<title>meta_screen_get_monitor_index_for_rect&#160;()</title>
<indexterm zone="meta-screen-get-monitor-index-for-rect"><primary>meta_screen_get_monitor_index_for_rect</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
meta_screen_get_monitor_index_for_rect
                               (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>,
                                <parameter><link linkend="MetaRectangle"><type>MetaRectangle</type></link> *rect</parameter>);</programlisting>
</refsect2>
<refsect2 id="meta-screen-get-mouse-window" role="function">
<title>meta_screen_get_mouse_window&#160;()</title>
<indexterm zone="meta-screen-get-mouse-window"><primary>meta_screen_get_mouse_window</primary></indexterm>
<programlisting language="C"><link linkend="MetaWindow"><returnvalue>MetaWindow</returnvalue></link>&#160;*
meta_screen_get_mouse_window (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>,
                              <parameter><link linkend="MetaWindow"><type>MetaWindow</type></link> *not_this_one</parameter>);</programlisting>
<para>Gets the <link linkend="MetaWindow"><type>MetaWindow</type></link> pointed by the mouse</para>
<refsect3 id="meta-screen-get-mouse-window.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>screen</para></entry>
<entry role="parameter_description"><para>an X screen structure.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>not_this_one</para></entry>
<entry role="parameter_description"><para>window to be excluded. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="meta-screen-get-mouse-window.returns" role="returns">
<title>Returns</title>
<para>the <link linkend="MetaWindow"><type>MetaWindow</type></link> pointed by the mouse
<link linkend="NULL:CAPS"><literal>NULL</literal></link> when window not found. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="meta-screen-override-workspace-layout" role="function">
<title>meta_screen_override_workspace_layout&#160;()</title>
<indexterm zone="meta-screen-override-workspace-layout"><primary>meta_screen_override_workspace_layout</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
meta_screen_override_workspace_layout (<parameter><link linkend="MetaScreen"><type>MetaScreen</type></link> *screen</parameter>,
                                       <parameter><link linkend="MetaScreenCorner"><type>MetaScreenCorner</type></link> starting_corner</parameter>,
                                       <parameter><link linkend="gboolean"><type>gboolean</type></link> vertical_layout</parameter>,
                                       <parameter><link linkend="int"><type>int</type></link> n_rows</parameter>,
                                       <parameter><link linkend="int"><type>int</type></link> n_columns</parameter>);</programlisting>
<para>Explicitly set the layout of workspaces. Once this has been called, the contents of the
_NET_DESKTOP_LAYOUT property on the root window are completely ignored.</para>
<refsect3 id="meta-screen-override-workspace-layout.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>screen</para></entry>
<entry role="parameter_description"><para>a <link linkend="MetaScreen"><type>MetaScreen</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>starting_corner</para></entry>
<entry role="parameter_description"><para>the corner at which the first workspace is found</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>vertical_layout</para></entry>
<entry role="parameter_description"><para>if <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> the workspaces are laid out in columns rather than rows</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>n_rows</para></entry>
<entry role="parameter_description"><para>number of rows of workspaces, or -1 to determine the number of rows from
<parameter>n_columns</parameter>
and the total number of workspaces</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>n_columns</para></entry>
<entry role="parameter_description"><para>number of columns of workspaces, or -1 to determine the number of columns from
<parameter>n_rows</parameter>
and the total number of workspaces</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>
<refsect1 id="MetaScreen.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="MetaScreenCorner" role="enum">
<title>enum MetaScreenCorner</title>
<indexterm zone="MetaScreenCorner"><primary>MetaScreenCorner</primary></indexterm>
<refsect3 id="MetaScreenCorner.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="META-SCREEN-TOPLEFT:CAPS">META_SCREEN_TOPLEFT</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="META-SCREEN-TOPRIGHT:CAPS">META_SCREEN_TOPRIGHT</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="META-SCREEN-BOTTOMLEFT:CAPS">META_SCREEN_BOTTOMLEFT</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="META-SCREEN-BOTTOMRIGHT:CAPS">META_SCREEN_BOTTOMRIGHT</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>

</refentry>
